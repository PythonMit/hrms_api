// <auto-generated />
using System;
using HRMS.DBL.DbContextConfiguration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRMS.DBL.Migrations
{
    [DbContext(typeof(HRMSDbContext))]
    [Migration("20231010105213_Add_EmployeeHoldSalary_Table")]
    partial class AddEmployeeHoldSalaryTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HRMS.DBL.Entities.ActivityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityJson")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ActivityJson");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EventLocation");

                    b.Property<string>("EventType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EventType");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ActivityLog", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Branches", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "ST",
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Surat",
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "AHM",
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ahmedabad",
                            RecordStatus = 1
                        });
                });

            modelBuilder.Entity("HRMS.DBL.Entities.DesignationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DesignationTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Director",
                            Order = 1,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HRExecutive",
                            Order = 2,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chief Technology Officer",
                            Order = 3,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Project Manager",
                            Order = 4,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Team Leader",
                            Order = 5,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BDM",
                            Order = 6,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BDE",
                            Order = 7,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FrontEnd Developer",
                            Order = 8,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sr. FrontEnd Developer",
                            Order = 9,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BackEnd Developer",
                            Order = 10,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sr. BackEnd Developer",
                            Order = 11,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FullStack Developer",
                            Order = 12,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sr. FullStack Developer",
                            Order = 13,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mobile Developer",
                            Order = 14,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sr.Mobile Developer",
                            Order = 15,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "UI / UX Designer",
                            Order = 16,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Web Designer",
                            Order = 17,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sr. Web Designer",
                            Order = 18,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Software Engineer",
                            Order = 19,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PHP Developer",
                            Order = 20,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sr. PHP Developer",
                            Order = 21,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Trainee",
                            Order = 22,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Project Trainee",
                            Order = 23,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sr. Software Developer",
                            Order = 24,
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Software Developer",
                            Order = 25,
                            RecordStatus = 1
                        });
                });

            modelBuilder.Entity("HRMS.DBL.Entities.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DocumentTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PAN",
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "AadhaarCard",
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ElectionCard",
                            RecordStatus = 1
                        });
                });

            modelBuilder.Entity("HRMS.DBL.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateOfBirth");

                    b.Property<int?>("DesignationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmployeeCode");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Gender");

                    b.Property<Guid?>("ImagekitDetailId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ImagekitDetailId");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MiddleName");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("SlackUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("DesignationTypeId");

                    b.HasIndex("ImagekitDetailId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AddressLine1");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AddressLine2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("City");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Country");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Pincode")
                        .HasColumnType("int")
                        .HasColumnName("Pincode");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("State");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeAddresses", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ContractEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ContractEndDate");

                    b.Property<DateTime>("ContractStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ContractStartDate");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("DesignationTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DropDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DropDate");

                    b.Property<string>("DropRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeContractStatusId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ImagekitDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsProjectTrainee")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NoticePeriodEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("NoticePeriodEndDate");

                    b.Property<DateTime>("NoticePeriodStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("NoticePeriodStartDate");

                    b.Property<string>("NoticeRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProbationPeriod")
                        .HasColumnType("int")
                        .HasColumnName("ProbationPeriod");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TerminateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TerminateRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainingPeriod")
                        .HasColumnType("int")
                        .HasColumnName("TrainingPeriod");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DesignationTypeId");

                    b.HasIndex("EmployeeContractStatusId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ImagekitDetailId");

                    b.ToTable("EmployeeContracts", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeContractStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("StatusType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StatusType");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeContractStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Running"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Drop"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Notice Period"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Completed"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Terminate"
                        });
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AllowEditPersonalDetails")
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("AllowEditPersonalDetails");

                    b.Property<string>("AlternateMobileNumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("AlternateMobileNumber");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .IsUnicode(false)
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<decimal?>("Experience")
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Experience");

                    b.Property<bool>("HasExited")
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("HasExited");

                    b.Property<bool>("HasFNFSettled")
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("HasFNFSettled");

                    b.Property<string>("InstituteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("JoinDate")
                        .IsUnicode(false)
                        .HasColumnType("datetime2")
                        .HasColumnName("JoinDate");

                    b.Property<string>("MobileNumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("MobileNumber");

                    b.Property<int?>("PermanentAddressId")
                        .HasColumnType("int");

                    b.Property<string>("PersonalEmail")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PersonalEmail");

                    b.Property<int?>("PresentAddressId")
                        .HasColumnType("int");

                    b.Property<string>("PreviousEmployeer")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("PreviousEmployeer");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkEmail")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("WorkEmail");

                    b.Property<string>("WorkingFormat")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("WorkingFormat");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PermanentAddressId");

                    b.HasIndex("PresentAddressId");

                    b.ToTable("EmployeeDetails", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentBack")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DocumentBack");

                    b.Property<string>("DocumentFront")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DocumentFront");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ImagekitDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ImagekitDetailId");

                    b.ToTable("EmployeeDocuments", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeEarningGross", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AdjustmentAmount")
                        .HasColumnType("float");

                    b.Property<double>("Basic")
                        .HasColumnType("float")
                        .HasColumnName("Basic");

                    b.Property<string>("CalculationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ChildEducation")
                        .HasColumnType("float");

                    b.Property<double>("ConveyanceAllowance")
                        .HasColumnType("float")
                        .HasColumnName("ConveyanceAllowance");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CreatedBy");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<double>("DA")
                        .HasColumnType("float")
                        .HasColumnName("DA");

                    b.Property<string>("DaysJSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ESI")
                        .HasColumnType("float");

                    b.Property<int>("EmployeeContractId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeEarningGrossStatusId")
                        .HasColumnType("int");

                    b.Property<double>("EmployeePF")
                        .HasColumnType("float")
                        .HasColumnName("EmployeePF");

                    b.Property<double>("EmployerPF")
                        .HasColumnType("float")
                        .HasColumnName("EmployerPF");

                    b.Property<double>("FixIncentive")
                        .HasColumnType("float")
                        .HasColumnName("FixIncentive");

                    b.Property<double>("HRA")
                        .HasColumnType("float")
                        .HasColumnName("HRA");

                    b.Property<double>("Incentive")
                        .HasColumnType("float");

                    b.Property<double>("LTA")
                        .HasColumnType("float");

                    b.Property<double>("LWP")
                        .HasColumnType("float")
                        .HasColumnName("LWP");

                    b.Property<double>("MedicalAllowance")
                        .HasColumnType("float");

                    b.Property<double>("NetSalary")
                        .HasColumnType("float")
                        .HasColumnName("NetSalary");

                    b.Property<double>("OtherAllowance")
                        .HasColumnType("float")
                        .HasColumnName("OtherAllowance");

                    b.Property<double>("OverTimeAmount")
                        .HasColumnType("float")
                        .HasColumnName("OverTimeAmount");

                    b.Property<int>("PT")
                        .HasColumnType("int")
                        .HasColumnName("PT");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("PaidDate");

                    b.Property<double>("PaidDays")
                        .HasColumnType("float")
                        .HasColumnName("PaidDays");

                    b.Property<bool>("PartlyPaid")
                        .HasColumnType("bit");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remarks");

                    b.Property<string>("SalaryMonth")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SalaryMonth");

                    b.Property<int>("SalaryYear")
                        .HasColumnType("int");

                    b.Property<double>("TDS")
                        .HasColumnType("float")
                        .HasColumnName("TDS");

                    b.Property<double>("TotalDays")
                        .HasColumnType("float")
                        .HasColumnName("TotalDays");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EmployeeContractId");

                    b.HasIndex("EmployeeEarningGrossStatusId");

                    b.ToTable("EmployeeEarningGross", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeEarningGrossStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("StatusType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StatusType");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeEarningGrossStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "InProcess"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Hold"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Paid"
                        });
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeFNFDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId");

                    b.Property<string>("ExitNote")
                        .HasMaxLength(2147483647)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExitNote");

                    b.Property<DateTime?>("FNFDueDate")
                        .IsUnicode(false)
                        .HasColumnType("datetime2")
                        .HasColumnName("FNFDueDate");

                    b.Property<bool>("HasCertificateIssued")
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("HasCertificateIssued");

                    b.Property<bool>("HasSalaryProceed")
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("HasSalaryProceed");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2147483647)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remarks");

                    b.Property<string>("SettlementBy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("SettlementBy");

                    b.Property<DateTime?>("SettlementDate")
                        .IsUnicode(false)
                        .HasColumnType("datetime2")
                        .HasColumnName("SettlementDate");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeFNFDetails", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeFixGross", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Basic")
                        .HasColumnType("float")
                        .HasColumnName("Basic");

                    b.Property<double>("ChildEducation")
                        .HasColumnType("float");

                    b.Property<double>("ConveyanceAllowance")
                        .HasColumnType("float")
                        .HasColumnName("ConveyanceAllowance");

                    b.Property<decimal>("CostToCompany")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("CostToCompany");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<double>("DA")
                        .HasColumnType("float")
                        .HasColumnName("DA");

                    b.Property<int>("EmployeeContractId")
                        .HasColumnType("int");

                    b.Property<int>("FixIncentiveDuration")
                        .HasColumnType("int")
                        .HasColumnName("FixIncentiveDuration");

                    b.Property<string>("FixIncentiveRemarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FixIncentiveRemarks");

                    b.Property<double>("HRA")
                        .HasColumnType("float")
                        .HasColumnName("HRA");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("IsDelete");

                    b.Property<bool>("IsFixIncentive")
                        .HasColumnType("bit")
                        .HasColumnName("IsFixIncentive");

                    b.Property<double>("LTA")
                        .HasColumnType("float");

                    b.Property<double>("MedicalAllowance")
                        .HasColumnType("float");

                    b.Property<double>("OtherAllowance")
                        .HasColumnType("float");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remarks");

                    b.Property<double>("StipendAmount")
                        .HasColumnType("float")
                        .HasColumnName("StipendAmount");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeContractId")
                        .IsUnique();

                    b.ToTable("EmployeeFixGross", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeHoldSalary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeEarningGrossId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeEarningGrossId");

                    b.Property<double?>("HoldAmount")
                        .HasColumnType("float")
                        .HasColumnName("HoldAmount");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("PaidDate");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remarks");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeEarningGrossId");

                    b.ToTable("EmployeeHoldSalary", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeIncentiveDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeContractId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeContractId");

                    b.Property<int>("EmployeeIncentiveStatusId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeIncentiveStatusId");

                    b.Property<double?>("IncentiveAmount")
                        .HasColumnType("float")
                        .HasColumnName("IncentiveAmount");

                    b.Property<DateTime?>("IncentiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("IncentiveDate");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remarks");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeContractId");

                    b.HasIndex("EmployeeIncentiveStatusId");

                    b.ToTable("EmployeeIncentiveDetails", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeIncentiveStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("StatusType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StatusType");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeIncentiveStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Hold"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Paid"
                        });
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeLeave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeContractId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LeaveEndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LeaveEndDate");

                    b.Property<DateTime>("LeaveStartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LeaveStartDate");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<double>("TotalLeaves")
                        .HasColumnType("float")
                        .HasColumnName("TotalLeaves");

                    b.Property<double>("TotalLeavesTaken")
                        .HasColumnType("float")
                        .HasColumnName("TotalLeavesTaken");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeContractId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("EmployeeLeaves", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeLeaveApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApplyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ApplyDate");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("ApprovedBy");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ApprovedDate");

                    b.Property<double>("ApprovedDays")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ApprovedFromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovedToDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<double>("DeclineDays")
                        .HasColumnType("float");

                    b.Property<int>("EmployeeContractId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeLeaveStatusId")
                        .HasColumnType("int");

                    b.Property<double>("LWPDays")
                        .HasColumnType("float");

                    b.Property<int?>("LeaveCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LeaveFromDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LeaveFromDate");

                    b.Property<DateTime?>("LeaveToDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LeaveToDate");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<double>("NoOfDays")
                        .HasColumnType("float")
                        .HasColumnName("NoOfDays");

                    b.Property<string>("PurposeOfLeave")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PurposeOfLeave");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("EmployeeContractId");

                    b.HasIndex("EmployeeLeaveStatusId");

                    b.HasIndex("LeaveCategoryId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("EmployeeLeaveApplications", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeLeaveApplicationComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CommentBy")
                        .HasColumnType("int")
                        .HasColumnName("CommentBy");

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CommentDate");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comments");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeLeaveApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CommentBy");

                    b.HasIndex("EmployeeLeaveApplicationId");

                    b.ToTable("EmployeeLeaveApplicationComments", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeLeaveApplicationManager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId");

                    b.Property<Guid?>("EmployeeLeaveApplicationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmployeeLeaveApplicationId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeLeaveApplicationId");

                    b.ToTable("EmployeeLeaveApplicationManagers", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeLeaveStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("StatusType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StatusType");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeLeaveStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Approved"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Declined"
                        });
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeLeaveTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Added")
                        .HasColumnType("float");

                    b.Property<double?>("Balance")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeContractId")
                        .HasColumnType("int");

                    b.Property<double?>("LWP")
                        .HasColumnType("float");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Used")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeContractId");

                    b.ToTable("EmployeeLeaveTransactions");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeOverTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("ApprovedBy");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ApprovedDate");

                    b.Property<TimeSpan?>("ApprovedMinutes")
                        .HasColumnType("time")
                        .HasColumnName("ApprovedMinutes");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeContractId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeOverTimeStatusId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OverTimeAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("OverTimeAmount");

                    b.Property<DateTime?>("OverTimeDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("OverTimeDate");

                    b.Property<TimeSpan?>("OverTimeMinutes")
                        .HasColumnType("time")
                        .HasColumnName("OverTimeMinutes");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProjectName");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Remarks");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TaskDescription");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("EmployeeContractId");

                    b.HasIndex("EmployeeOverTimeStatusId");

                    b.ToTable("EmployeeOverTimes", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeOverTimeManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId");

                    b.Property<int?>("EmployeeOvertimeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeOvertimeId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeOvertimeId");

                    b.ToTable("EmployeeOverTimeManagers", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeOverTimeStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("StatusType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StatusType");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeOverTimeStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Approved"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Declined"
                        });
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeSalaryStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("StatusType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StatusType");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeSalaryStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "In Process"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Hold"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1,
                            StatusType = "Paid"
                        });
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("EmployeeStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Status = "InActive"
                        });
                });

            modelBuilder.Entity("HRMS.DBL.Entities.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Holidays", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.ImagekitDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrivateFile")
                        .HasColumnType("bit");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ImagekitDetails", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.LeaveCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Category");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LeaveCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Casual Leave",
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 2,
                            Category = "Privilege Leave",
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1
                        },
                        new
                        {
                            Id = 3,
                            Category = "Sick Leave",
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = 1
                        });
                });

            modelBuilder.Entity("HRMS.DBL.Entities.LeaveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<int>("TotalLeaves")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LeaveTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Carry Forward",
                            RecordStatus = 1,
                            TotalLeaves = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Flat Leave",
                            RecordStatus = 1,
                            TotalLeaves = 15
                        },
                        new
                        {
                            Id = 3,
                            CreatedDateTimeUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Leave Without Pay",
                            RecordStatus = 1,
                            TotalLeaves = 0
                        });
                });

            modelBuilder.Entity("HRMS.DBL.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetroCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("HasRead")
                        .HasColumnType("bit")
                        .HasColumnName("HasRead");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Type");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Projects", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.ProjectManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectManagers", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 6,
                            Name = "Super Admin",
                            Priority = 1
                        },
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            Priority = 4
                        },
                        new
                        {
                            Id = 2,
                            Name = "HR Manager",
                            Priority = 7
                        },
                        new
                        {
                            Id = 3,
                            Name = "Employee",
                            Priority = 13
                        },
                        new
                        {
                            Id = 4,
                            Name = "Manager",
                            Priority = 10
                        },
                        new
                        {
                            Id = 5,
                            Name = "Guest",
                            Priority = 16
                        });
                });

            modelBuilder.Entity("HRMS.DBL.Entities.SystemFlag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemFlags", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CipherText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Disabled")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("Disabled");

                    b.Property<string>("Emailaddress")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("EmailAddress");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Password")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Password");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Salt")
                        .HasMaxLength(32)
                        .HasColumnType("varbinary(32)");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("HRMS.DBL.Entities.Employee", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("HRMS.DBL.Entities.DesignationType", "DesignationType")
                        .WithMany()
                        .HasForeignKey("DesignationTypeId");

                    b.HasOne("HRMS.DBL.Entities.ImagekitDetail", "ImagekitDetail")
                        .WithMany()
                        .HasForeignKey("ImagekitDetailId");

                    b.HasOne("HRMS.DBL.Entities.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("HRMS.DBL.Entities.Employee", "UserId");

                    b.Navigation("Branch");

                    b.Navigation("DesignationType");

                    b.Navigation("ImagekitDetail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeContract", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.DesignationType", "DesignationType")
                        .WithMany()
                        .HasForeignKey("DesignationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMS.DBL.Entities.EmployeeContractStatus", "EmployeeContractStatus")
                        .WithMany()
                        .HasForeignKey("EmployeeContractStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMS.DBL.Entities.Employee", "Employee")
                        .WithMany("EmployeeContracts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMS.DBL.Entities.ImagekitDetail", "ImagekitDetail")
                        .WithMany()
                        .HasForeignKey("ImagekitDetailId");

                    b.Navigation("DesignationType");

                    b.Navigation("Employee");

                    b.Navigation("EmployeeContractStatus");

                    b.Navigation("ImagekitDetail");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeDetail", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMS.DBL.Entities.EmployeeAddress", "PermanentAddress")
                        .WithMany()
                        .HasForeignKey("PermanentAddressId");

                    b.HasOne("HRMS.DBL.Entities.EmployeeAddress", "PresentAddress")
                        .WithMany()
                        .HasForeignKey("PresentAddressId");

                    b.Navigation("Employee");

                    b.Navigation("PermanentAddress");

                    b.Navigation("PresentAddress");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeDocument", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMS.DBL.Entities.Employee", "Employee")
                        .WithMany("EmployeeDocuments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMS.DBL.Entities.ImagekitDetail", "ImagekitDetail")
                        .WithMany()
                        .HasForeignKey("ImagekitDetailId");

                    b.Navigation("DocumentType");

                    b.Navigation("Employee");

                    b.Navigation("ImagekitDetail");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeEarningGross", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("HRMS.DBL.Entities.EmployeeContract", "EmployeeContract")
                        .WithMany()
                        .HasForeignKey("EmployeeContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMS.DBL.Entities.EmployeeEarningGrossStatus", "EmployeeEarningGrossStatus")
                        .WithMany()
                        .HasForeignKey("EmployeeEarningGrossStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("EmployeeContract");

                    b.Navigation("EmployeeEarningGrossStatus");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeFNFDetails", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeFixGross", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.EmployeeContract", "EmployeeContract")
                        .WithOne("EmployeeFixGross")
                        .HasForeignKey("HRMS.DBL.Entities.EmployeeFixGross", "EmployeeContractId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EmployeeContract");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeHoldSalary", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.EmployeeEarningGross", "EmployeeEarningGross")
                        .WithMany()
                        .HasForeignKey("EmployeeEarningGrossId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeEarningGross");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeIncentiveDetails", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.EmployeeContract", "EmployeeContract")
                        .WithMany("EmployeeIncentiveDetails")
                        .HasForeignKey("EmployeeContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMS.DBL.Entities.EmployeeIncentiveStatus", "EmployeeIncentiveStatus")
                        .WithMany()
                        .HasForeignKey("EmployeeIncentiveStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeContract");

                    b.Navigation("EmployeeIncentiveStatus");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeLeave", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.EmployeeContract", "EmployeeContract")
                        .WithMany("EmployeeLeaves")
                        .HasForeignKey("EmployeeContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMS.DBL.Entities.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeContract");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeLeaveApplication", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("ApprovedBy");

                    b.HasOne("HRMS.DBL.Entities.EmployeeContract", "EmployeeContract")
                        .WithMany("EmployeeLeaveApplications")
                        .HasForeignKey("EmployeeContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMS.DBL.Entities.EmployeeLeaveStatus", "EmployeeLeaveStatus")
                        .WithMany()
                        .HasForeignKey("EmployeeLeaveStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMS.DBL.Entities.LeaveCategory", "LeaveCategory")
                        .WithMany()
                        .HasForeignKey("LeaveCategoryId");

                    b.HasOne("HRMS.DBL.Entities.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("EmployeeContract");

                    b.Navigation("EmployeeLeaveStatus");

                    b.Navigation("LeaveCategory");

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeLeaveApplicationComment", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("CommentBy");

                    b.HasOne("HRMS.DBL.Entities.EmployeeLeaveApplication", "EmployeeLeaveApplication")
                        .WithMany("EmployeeLeaveApplicationComments")
                        .HasForeignKey("EmployeeLeaveApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("EmployeeLeaveApplication");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeLeaveApplicationManager", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.Employee", "Employee")
                        .WithMany("EmployeeLeaveApplicationManagers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HRMS.DBL.Entities.EmployeeLeaveApplication", "EmployeeLeaveApplication")
                        .WithMany("EmployeeLeaveApplicationManagers")
                        .HasForeignKey("EmployeeLeaveApplicationId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Employee");

                    b.Navigation("EmployeeLeaveApplication");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeLeaveTransaction", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.EmployeeContract", "EmployeeContract")
                        .WithMany("EmployeeLeaveTransactions")
                        .HasForeignKey("EmployeeContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeContract");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeOverTime", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("ApprovedBy");

                    b.HasOne("HRMS.DBL.Entities.EmployeeContract", "EmployeeContract")
                        .WithMany()
                        .HasForeignKey("EmployeeContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMS.DBL.Entities.EmployeeOverTimeStatus", "EmployeeOverTimeStatus")
                        .WithMany()
                        .HasForeignKey("EmployeeOverTimeStatusId");

                    b.Navigation("Employee");

                    b.Navigation("EmployeeContract");

                    b.Navigation("EmployeeOverTimeStatus");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeOverTimeManager", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.Employee", "Employee")
                        .WithMany("EmployeeOverTimeManagers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("HRMS.DBL.Entities.EmployeeOverTime", "EmployeeOverTime")
                        .WithMany("EmployeeOverTimeManagers")
                        .HasForeignKey("EmployeeOvertimeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Employee");

                    b.Navigation("EmployeeOverTime");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.Notification", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.ProjectManager", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.Employee", "Employee")
                        .WithMany("ProjectManagers")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRMS.DBL.Entities.Project", "Project")
                        .WithMany("ProjectManagers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.User", b =>
                {
                    b.HasOne("HRMS.DBL.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.Employee", b =>
                {
                    b.Navigation("EmployeeContracts");

                    b.Navigation("EmployeeDocuments");

                    b.Navigation("EmployeeLeaveApplicationManagers");

                    b.Navigation("EmployeeOverTimeManagers");

                    b.Navigation("ProjectManagers");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeContract", b =>
                {
                    b.Navigation("EmployeeFixGross");

                    b.Navigation("EmployeeIncentiveDetails");

                    b.Navigation("EmployeeLeaveApplications");

                    b.Navigation("EmployeeLeaveTransactions");

                    b.Navigation("EmployeeLeaves");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeLeaveApplication", b =>
                {
                    b.Navigation("EmployeeLeaveApplicationComments");

                    b.Navigation("EmployeeLeaveApplicationManagers");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.EmployeeOverTime", b =>
                {
                    b.Navigation("EmployeeOverTimeManagers");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.Project", b =>
                {
                    b.Navigation("ProjectManagers");
                });

            modelBuilder.Entity("HRMS.DBL.Entities.User", b =>
                {
                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
