<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Employee:NoAvailableData" xml:space="preserve">
    <value>There are no data available for {term}! Please contact Admin.</value>
  </data>
  <data name="Employee:NoInformationExists" xml:space="preserve">
    <value>This requested employee(s) information not available!</value>
  </data>
  <data name="EmployeeContract:AvailableContract" xml:space="preserve">
    <value>User having contract(s). Please remove contract(s)!</value>
  </data>
  <data name="EmployeeContract:ManageContractError" xml:space="preserve">
    <value>The new cantract request can not be proceed. Please contract Admin!</value>
  </data>
  <data name="EmployeeContract:NoContractInformation" xml:space="preserve">
    <value>This requested contract(s) information not available!</value>
  </data>
  <data name="EmployeeContract:NoRunningContract" xml:space="preserve">
    <value>There are not running contract not available for employee!</value>
  </data>
  <data name="EmployeeLeave:InvalidApplicationForLeave" xml:space="preserve">
    <value>Leave Application could not be generated for current contract. Please contact Admin!</value>
  </data>
  <data name="EmployeeLeave:InvalidEmployeeCode" xml:space="preserve">
    <value>Employee code not exists in model!</value>
  </data>
  <data name="EmployeeLeave:NoRemainingEmployeeLeave" xml:space="preserve">
    <value>There are no employee without leave balance!</value>
  </data>
  <data name="EmployeeLeave:NoValidContract" xml:space="preserve">
    <value>User does not have valid contract to generate leave balance. Please contact Admin!</value>
  </data>
  <data name="EmployeeLeave:NoValidLeaveApplication" xml:space="preserve">
    <value>There are leave application available for employee!</value>
  </data>
  <data name="EmployeeLeave:NoValidLeaveBalance" xml:space="preserve">
    <value>There are leave balance available for employee!</value>
  </data>
  <data name="EmployeeLeave:StatusRequest" xml:space="preserve">
    <value>Requested leave application has been approved already! Please contact Admin!</value>
  </data>
  <data name="EmployeeOvertime:EmployeeOrContractNoExists" xml:space="preserve">
    <value>User or Contract does not exists. Please contact Admin!</value>
  </data>
  <data name="EmployeeOvertime:NoOvertimeDataExists" xml:space="preserve">
    <value>Requested overtime details does not exists. Please contact Admin!</value>
  </data>
  <data name="EmployeeSalary:AlreadyExists" xml:space="preserve">
    <value>Salary already exists for selected month!</value>
  </data>
  <data name="EmployeeSalary:InValidRequest" xml:space="preserve">
    <value>Your salary request is invalid!</value>
  </data>
  <data name="EmployeeSalary:NoContractOrEarningGross" xml:space="preserve">
    <value>Salary could not be generated for current contract. Please contact Admin or HR!</value>
  </data>
  <data name="EmployeeSalary:NoContractOrEarningGrossSlip" xml:space="preserve">
    <value>Salary slip could not be generated for current month. Please contact Admin or HR!</value>
  </data>
  <data name="EmployeeSalary:NoEmployeeInformation" xml:space="preserve">
    <value>There is no information or contract available for employee. Please contact Admin or HR!</value>
  </data>
  <data name="General:ErrorUpsertRecords" xml:space="preserve">
    <value>Something went wrong while completing request!</value>
  </data>
  <data name="General:NoRecordsAvailable" xml:space="preserve">
    <value>There are no records available for current request!</value>
  </data>
  <data name="MasterData:NoAvailable" xml:space="preserve">
    <value>There are no data available! Please contact Admin.</value>
  </data>
  <data name="Settings:PermenantRemove" xml:space="preserve">
    <value>Permenant remove is disabled. Please enable to remove data!</value>
  </data>
  <data name="SignIn:AccountInActive" xml:space="preserve">
    <value>Your account not active!</value>
  </data>
  <data name="SignIn:AccountIsDisabled" xml:space="preserve">
    <value>Your account not disabled!</value>
  </data>
  <data name="SignIn:AccountNotConfirmed" xml:space="preserve">
    <value>Your account not confirmed!</value>
  </data>
  <data name="SignIn:InvalidEmailPassword" xml:space="preserve">
    <value>Your email or password is invalid!</value>
  </data>
  <data name="SignIn:UserAlreadyExists" xml:space="preserve">
    <value>User already exists. Please use different email address for sign up!</value>
  </data>
  <data name="User:InsufficientPermissions" xml:space="preserve">
    <value>User do not have required permissions!</value>
  </data>
  <data name="User:InvalidPasswordResetRequest" xml:space="preserve">
    <value>Reset request for password is invalid!</value>
  </data>
  <data name="User:InvalidUser" xml:space="preserve">
    <value>Your user is invalid!</value>
  </data>
  <data name="User:NewPasswordRequired" xml:space="preserve">
    <value>You must enter new password!</value>
  </data>
</root>